{"version":3,"sources":["../src/es6.js"],"names":["search","userArray","searchInput","document","querySelector","addEventListener","renderSearchResults","searchForUsers","value","searchTerm","filter","user","nickName","toLowerCase","includes","searchResultsData","searchResultsContainer","templateData","Templates","renderForPromise","html","js","replaceNodeContents"],"mappings":"scACA,O,82BAEsB,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAe,CACjC,GAAMC,CAAAA,CAAW,CAAGC,QAAQ,CAACC,aAAT,CAAuB,gCAAvB,CAApB,CAGAF,CAAW,CAACG,gBAAZ,CAA6B,OAA7B,CAAsC,eAAS,UAAM,CAChDC,CAAmB,CAACC,CAAc,CAACN,CAAD,CAAYC,CAAW,CAACM,KAAxB,CAAf,CACvB,CAFqC,CAEnC,GAFmC,CAAtC,CAGH,C,IAUMD,CAAAA,CAAc,CAAG,SAACN,CAAD,CAAYQ,CAAZ,CAA2B,CAE9C,GAAmB,EAAf,GAAAA,CAAJ,CAAuB,CACnB,MAAOR,CAAAA,CACV,CAGF,MAAOA,CAAAA,CAAS,CAACS,MAAV,CAAiB,SAACC,CAAD,CAAU,CAC7B,MAAOA,CAAAA,CAAI,CAACC,QAAL,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCL,CAAU,CAACI,WAAX,EAArC,CACX,CAFM,CAGV,C,CAEKP,CAAmB,4CAAG,WAAMS,CAAN,iGAClBC,CADkB,CACOb,QAAQ,CAACC,aAAT,CAAuB,kCAAvB,CADP,CAElBa,CAFkB,CAEH,CACjB,QAAWF,CADM,CAFG,gBAMCG,CAAAA,CAAS,CAACC,gBAAV,CAA2B,4BAA3B,CAAyDF,CAAzD,CAND,iBAMjBG,CANiB,GAMjBA,IANiB,CAMXC,CANW,GAMXA,EANW,gBAOlBH,CAAAA,CAAS,CAACI,mBAAV,CAA8BN,CAA9B,CAAsDI,CAAtD,CAA4DC,CAA5D,CAPkB,yCAAH,uD","sourcesContent":["import {debounce} from 'core/utils';\nimport * as Templates from 'core/templates';\n\nexport const search = (userArray) => {\n    const searchInput = document.querySelector('[data-action=\"dev-training\"]');\n\n    // Debounce the search input so that it only executes 300 milliseconds after the user has finished typing.\n    searchInput.addEventListener('input', debounce(() => {\n         renderSearchResults(searchForUsers(userArray, searchInput.value));\n    }, 300));\n};\n\n  /**\n  * Find the list of users who's names include the given search term.\n  *\n  * @param {Array} userArray List of users for the grader\n  * @param {String} searchTerm The search term to match\n  * @return {Array}\n  */\n\n const searchForUsers = (userArray, searchTerm) => {\n     // The user didn't search for anything so pass pack the entire array.\n     if (searchTerm === '') {\n         return userArray;\n     }\n\n    // Filter down the user array to anything that includes the search in any capacity\n    return userArray.filter((user) => {\n         return user.nickName.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n};\n\nconst renderSearchResults = async(searchResultsData) => {\n    const searchResultsContainer = document.querySelector('[data-region=\"search-results\"]');\n    const templateData = {\n        'results': searchResultsData\n    };\n     // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('local_uitest/searchresults', templateData);\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\n};"],"file":"es6.min.js"}